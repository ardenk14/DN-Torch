import torch
#from DN12 import DN1
from ReLU_DN1 import DN1
#from DN_x_predict import DN1

if __name__ == '__main__':
    DN = DN1(5, 5, 2)
    for i in range(1):
        print("UPDATE: ----------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 0, 0, 0, 1]), torch.tensor([0, 0]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 0, 0, 1, 0]), torch.tensor([0, 0]), supervized_z=torch.tensor([0, 1]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 0, 1, 0, 0]), response, supervized_z=torch.tensor([0, 1]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 1, 0, 0, 0]), response, supervized_z=torch.tensor([0, 1]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([1, 0, 0, 0, 0]), response, supervized_z=torch.tensor([1, 0]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 0, 0, 1, 0]), response, supervized_z=torch.tensor([1, 0]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 0, 0, 1, 0]), response, supervized_z=torch.tensor([0, 1]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 0, 0, 1, 0]), response, supervized_z=torch.tensor([0, 1]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 1, 0, 0, 0]), response, supervized_z=torch.tensor([0, 1]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 0, 0, 0, 1]), response, supervized_z=torch.tensor([1, 0]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 1, 0, 0, 0]), response, supervized_z=torch.tensor([0, 1]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 0, 0, 1, 0]), response, supervized_z=torch.tensor([1, 0]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 0, 1, 0, 0]), response, supervized_z=torch.tensor([0, 1]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 0, 0, 0, 1]), response, supervized_z=torch.tensor([0, 1]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 1, 0, 0, 0]), response, supervized_z=torch.tensor([0, 1]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([1, 0, 0, 0, 0]), response, supervized_z=torch.tensor([1, 0]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 1, 0, 0, 0]), response, supervized_z=torch.tensor([1, 0]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
    print("UPDATE: ------------------------------------------------------------------------------------")
    response = DN.update(torch.tensor([0, 1, 0, 0, 0]), response)
    print("RESPONSE: ", response)
    print("NEURONS: ", DN.neurons)

    print("SIMILARITY: ", DN.neurons @ DN.neurons.T)
    # Check how close neurons are to each other by getting their response if all the other neurons weights where fed into them

    """DN = DN1(5, 5, 2, xtopk=1)
    for i in range(100):
        print("UPDATE: ----------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 0, 0, 0, 1]), torch.tensor([0, 0]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 0, 0, 1, 0]), torch.tensor([0, 0]), supervized_z=torch.tensor([0, 1]), supervized_x=torch.tensor([0, 0, 0, 1, 0]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 0, 1, 0, 0]), response, supervized_z=torch.tensor([0, 1]), supervized_x=torch.tensor([0, 0, 1, 0, 0]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 1, 0, 0, 0]), response, supervized_z=torch.tensor([0, 1]), supervized_x=torch.tensor([0, 1, 0, 0, 0]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([1, 0, 0, 0, 0]), response, supervized_z=torch.tensor([1, 0]), supervized_x=torch.tensor([1, 0, 0, 0, 0]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 0, 0, 1, 0]), response, supervized_z=torch.tensor([1, 0]), supervized_x=torch.tensor([0, 0, 0, 1, 0]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 0, 0, 1, 0]), response, supervized_z=torch.tensor([0, 1]), supervized_x=torch.tensor([0, 0, 0, 1, 0]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 0, 0, 1, 0]), response, supervized_z=torch.tensor([0, 1]), supervized_x=torch.tensor([0, 0, 0, 1, 0]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 1, 0, 0, 0]), response, supervized_z=torch.tensor([0, 1]), supervized_x=torch.tensor([0, 1, 0, 0, 0]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 0, 0, 0, 1]), response, supervized_z=torch.tensor([1, 0]), supervized_x=torch.tensor([0, 0, 0, 0, 1]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 1, 0, 0, 0]), response, supervized_z=torch.tensor([0, 1]), supervized_x=torch.tensor([0, 1, 0, 0, 0]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 0, 0, 1, 0]), response, supervized_z=torch.tensor([1, 0]), supervized_x=torch.tensor([0, 0, 0, 1, 0]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 0, 1, 0, 0]), response, supervized_z=torch.tensor([0, 1]), supervized_x=torch.tensor([0, 0, 1, 0, 0]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 0, 0, 0, 1]), response, supervized_z=torch.tensor([0, 1]), supervized_x=torch.tensor([0, 0, 0, 0, 1]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 1, 0, 0, 0]), response, supervized_z=torch.tensor([0, 1]), supervized_x=torch.tensor([0, 1, 0, 0, 0]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([1, 0, 0, 0, 0]), response, supervized_z=torch.tensor([1, 0]), supervized_x=torch.tensor([1, 0, 0, 0, 0]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
        print("UPDATE: ------------------------------------------------------------------------------------")
        response = DN.update(torch.tensor([0, 1, 0, 0, 0]), response, supervized_z=torch.tensor([1, 0]), supervized_x=torch.tensor([0, 1, 0, 0, 0]))
        print("RESPONSE: ", response)
        print("NEURONS: ", DN.neurons)
    print("UPDATE: ------------------------------------------------------------------------------------")
    DN.xtopk = None
    response = DN.update(torch.tensor([0, 1, 0, 0, 0]), response)
    print("RESPONSE: ", response)
    print("NEURONS: ", DN.neurons)

    print("SIMILARITY: ", DN.neurons @ DN.neurons.T)"""